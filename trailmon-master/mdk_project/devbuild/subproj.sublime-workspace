{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"FR_INV",
				"FR_INVALID_PARAMETER"
			],
			[
				"FR_NO",
				"FR_NO_FILESYSTEM"
			],
			[
				"FR_NOT",
				"FR_NOT_ENABLED"
			],
			[
				"FR_IN",
				"FR_INVALID_DRIVE"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "/**\n  ******************************************************************************\n  * File Name          : main.c\n  * Description        : Main program body\n  ******************************************************************************\n  *\n  * COPYRIGHT(c) 2016 STMicroelectronics\n  *\n  * Redistribution and use in source and binary forms, with or without modification,\n  * are permitted provided that the following conditions are met:\n  *   1. Redistributions of source code must retain the above copyright notice,\n  *      this list of conditions and the following disclaimer.\n  *   2. Redistributions in binary form must reproduce the above copyright notice,\n  *      this list of conditions and the following disclaimer in the documentation\n  *      and/or other materials provided with the distribution.\n  *   3. Neither the name of STMicroelectronics nor the names of its contributors\n  *      may be used to endorse or promote products derived from this software\n  *      without specific prior written permission.\n  *\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  *\n  ******************************************************************************\n  */\n/* Includes ------------------------------------------------------------------*/\n#include \"stm32f3xx_hal.h\"\n#include \"adc.h\"\n#include \"fatfs.h\"\n#include \"rtc.h\"\n#include \"spi.h\"\n#include \"tim.h\"\n#include \"usart.h\"\n#include \"usb.h\"\n#include \"gpio.h\"\n\n/* USER CODE BEGIN Includes */\n#include \"cmsis_os.h\"\n\n/* USER CODE END Includes */\n\n/* Private variables ---------------------------------------------------------*/\n\n/* USER CODE BEGIN PV */\n/* Private variables ---------------------------------------------------------*/\n\n/* USER CODE END PV */\n\n/* Private function prototypes -----------------------------------------------*/\nvoid SystemClock_Config(void);\nvoid Error_Handler(void);\n\n/* USER CODE BEGIN PFP */\n/* Private function prototypes -----------------------------------------------*/\n\n/* USER CODE END PFP */\n\n/* USER CODE BEGIN 0 */\n\n// Here is a new comment\n\nvoid job1 (void const *argument) {\n  // Function 'job1'\n  FATFS Fatfs;\t\t/* File system object */\n  FIL Fil;\t\t/* File object */\n  FRESULT rc;\n  RTC_TimeTypeDef t;\n  volatile int i;\n  if (__HAL_RCC_SPI2_IS_CLK_ENABLED()) {\n    printf(\"Clock is rockin\\n\");\n  }\n  else {\n    printf(\"clock is not a rockin\\n\");\n  }\n  rc = f_mount(&Fatfs,\"\",1);\t\t/* Register volume work area (never fails) */\n  printf(\"Mount Status: \");\n  print_disk_error(rc);\n  rc = f_open(&Fil, \"message.txt\", FA_READ);\n  printf(\"Read Status: \");\n  print_disk_error(rc);\n  // HAL_RTC_MspInit(&hrtc);\n\n  /* Get RTC Time */\n\n  for (i=0;i<10;i++) {\n    osDelay (1000);\n    HAL_RTC_GetTime(&hrtc,&t,RTC_FORMAT_BIN);\n    printf(\"%d Seconds = %d\\n\",i,t.Seconds);\n  }\n\n  while (1) {\n    // printf(\"Hello World\\n\\r\");\n    osDelay (1000); // Delay execution for 1s\n  }\n}\n\nosThreadDef(job1, osPriorityLow, 1, 0); // Define job1 as thread\n\n/* USER CODE END 0 */\n\nint main(void) {\n  /* USER CODE BEGIN 1 */\n\n  /* USER CODE END 1 */\n\n  /* MCU Configuration----------------------------------------------------------*/\n\n  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */\n  HAL_Init();\n\n  /* Configure the system clock */\n\n  SystemClock_Config();\n\n  /* Initialize all configured peripherals */\n  MX_GPIO_Init();\n  MX_ADC1_Init();\n  MX_RTC_Init();\n  MX_SPI1_Init();\n  MX_SPI2_Init();\n  MX_SPI3_Init();\n  MX_SPI4_Init();\n  MX_TIM3_Init();\n  MX_USART1_UART_Init();\n  MX_USART3_UART_Init();\n  MX_USB_PCD_Init();\n  MX_FATFS_Init();\n\n  /* USER CODE BEGIN 2 */\n  printf(\"Here it is ... \\n\");\n  osKernelInitialize (); // Initialize RTOS kernel\n  osThreadCreate (osThread(job1), NULL); // Create the thread\n  osKernelStart (); // Start kernel & job1 thread\n\n  /* USER CODE END 2 */\n\n  /* Infinite loop */\n  /* USER CODE BEGIN WHILE */\n  while (1) {\n  /* USER CODE END WHILE */\n\n  /* USER CODE BEGIN 3 */\n    osDelay (1000); // Delay execution for 1s\n  }\n  /* USER CODE END 3 */\n\n}\n\n/** System Clock Configuration\n*/\nvoid SystemClock_Config(void) {\n  RCC_OscInitTypeDef RCC_OscInitStruct;\n  RCC_ClkInitTypeDef RCC_ClkInitStruct;\n  RCC_PeriphCLKInitTypeDef PeriphClkInit;\n\n  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;\n  RCC_OscInitStruct.HSEState = RCC_HSE_ON;\n  RCC_OscInitStruct.LSEState = RCC_LSE_ON;\n  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;\n  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;\n  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;\n  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;\n  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {\n    Error_Handler();\n  }\n\n  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK\n                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;\n  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;\n  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;\n  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;\n  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;\n  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)\n  {\n    Error_Handler();\n  }\n\n  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_USART1\n                              |RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_RTC\n                              |RCC_PERIPHCLK_ADC12|RCC_PERIPHCLK_TIM34;\n  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;\n  PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;\n  PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;\n  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;\n  PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;\n  PeriphClkInit.Tim34ClockSelection = RCC_TIM34CLK_HCLK;\n  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)\n  {\n    Error_Handler();\n  }\n\n  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);\n\n  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);\n\n  /* SysTick_IRQn interrupt configuration */\n  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);\n}\n\n/* USER CODE BEGIN 4 */\n\n/* USER CODE END 4 */\n\n/**\n  * @brief  This function is executed in case of error occurrence.\n  * @param  None\n  * @retval None\n  */\nvoid (void)\n{\n  /* USER CODE BEGIN Error_Handler */\n  /* User can add his own implementation to report the HAL error return state */\n  while(1)\n  {\n  }\n  /* USER CODE END Error_Handler */\n}\n\n#ifdef USE_FULL_ASSERT\n\n/**\n   * @brief Reports the name of the source file and the source line number\n   * where the assert_param error has occurred.\n   * @param file: pointer to the source file name\n   * @param line: assert_param error line source number\n   * @retval None\n   */\nvoid assert_failed(uint8_t* file, uint32_t line)\n{\n  /* USER CODE BEGIN 6 */\n  /* User can add his own implementation to report the file name and line number,\n    ex: printf(\"Wrong parameters value: file %s on line %d\\r\\n\", file, line) */\n  /* USER CODE END 6 */\n\n}\n\n#endif\n\n/**\n  * @}\n  */\n\n/**\n  * @}\n*/\n\n/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/\n",
			"file": "Src/main.c",
			"file_size": 8010,
			"file_write_time": 131343379282156916,
			"settings":
			{
				"buffer_size": 7743,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Here is a new file ",
			"settings":
			{
				"buffer_size": 19,
				"line_ending": "Windows",
				"name": "Here is a new file"
			}
		},
		{
			"contents": "here is another ",
			"settings":
			{
				"buffer_size": 16,
				"line_ending": "Windows",
				"name": "here is another"
			}
		},
		{
			"file": "Src/gpio.c",
			"settings":
			{
				"buffer_size": 7736,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Again. ",
			"settings":
			{
				"buffer_size": 7,
				"line_ending": "Windows",
				"name": "Again."
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "ssc",
		"selected_items":
		[
			[
				"ssc",
				"Set Syntax: C"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"git",
				"Git: Status"
			]
		],
		"width": 490.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"sublime.log_commands(False)",
			"sublime.log_commands(Fakse)",
			"sublime.log_commands(True)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Src"
	],
	"file_history":
	[
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Src/stm32f3xx_hal_msp.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Src/rtc.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/CMSIS/RTOS/Template/cmsis_os.h",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Src/mmcbb.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Middlewares/Third_Party/FatFs/src/ff.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Inc/rtc.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Src/adxl362.c",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/trailmon/mdk_project/devbuild/Drivers/CMSIS/DSP_Lib/Source/TransformFunctions/arm_cfft_radix2_init_q31.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_gpio.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Inc/mxconstants.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/fatfs.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/spi.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Middlewares/Third_Party/FatFs/src/diskio.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/CMSIS/RTOS/Template/cmsis_os.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/gpio.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/microlib_stubs.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_spi.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_spi_ex.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/adxl362.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/adxl362.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/main.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Inc/user_diskio.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Inc/fatfs.h",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/user_diskio.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi_ex.h",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/User/CTags.sublime-settings",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/CTags/Default.sublime-keymap",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/mmcbb.c",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Middlewares/Third_Party/FatFs/src/diskio.c",
		"/C/Users/bhimebau/Desktop/ffsample/stm32/mmc_32f1.c",
		"/C/Users/bhimebau/Desktop/ffsample/stm32/ff.c",
		"/C/Users/bhimebau/Desktop/ffsample/stm32/Makefile",
		"/C/Users/bhimebau/Desktop/ffsample/stm32/main.c",
		"/C/Users/bhimebau/forge/tcgps/Src/main.c",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/GitGutter/Default (Windows).sublime-keymap",
		"/C/Users/bhimebau/forge/SOIC-Digital-Systems/Spring-2016/lab2/main.c",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/User/SublimeGit.sublime-settings",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c",
		"/C/Users/bhimebau/Desktop/MCB1700_SD_File/SD_File.c",
		"/C/Users/bhimebau/Desktop/MCB1700_SD_File/Retarget.c",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/SublimeGit/SublimeGit.sublime-settings",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/SublimeGit/Default (Windows).sublime-keymap",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/SublimeGit/Default.sublime-keymap",
		"/C/Users/bhimebau/Desktop/MCB1700_SD_File/File_Config.c",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/bhimebau/AppData/Roaming/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/MDK-ARM/RTE/CMSIS/RTX_Conf_CM.c",
		"/C/Keil_v5/ARM/Pack/ARM/CMSIS/5.0.0-Beta4/CMSIS/RTOS/RTX/INC/RTX_CM_lib.h",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/trace.ini",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h",
		"/C/Users/bhimebau/forge/saleae_capture/capture.py",
		"/C/Users/bhimebau/forge/trailmon/mdk_project/devbuild/Src/stm32f3xx_it.c",
		"/C/Users/bhimebau/Desktop/foo.c",
		"/C/Users/bhimebau/Documents/Arduino/libraries/Adafruit-Fingerprint-Sensor-Library-master/examples/fingerprint/fingerprint.ino"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"RTC",
			"driver",
			"xmit_mmc",
			"Msp",
			"spi",
			"AF",
			"Msp",
			"DMA",
			"git",
			"huart"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7743,
						"regions":
						{
						},
						"selection":
						[
							[
								6940,
								6940
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3498.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19,
						"regions":
						{
						},
						"selection":
						[
							[
								19,
								19
							]
						],
						"settings":
						{
							"auto_name": "Here is a new file",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"auto_name": "here is another",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "Src/gpio.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7736,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 22.0,
						"translation.y": 148.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7,
						"regions":
						{
						},
						"selection":
						[
							[
								7,
								7
							]
						],
						"settings":
						{
							"auto_name": "Again.",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			0.66,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 130.0
	},
	"output.git-push":
	{
		"height": 130.0
	},
	"pinned_build_system": "",
	"project": "subproj.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Src\\adxl362.c"
			],
			[
				"ff.c",
				"Drivers\\CMSIS\\DSP_Lib\\Source\\TransformFunctions\\arm_cfft_radix2_init_q31.c"
			],
			[
				"adxl",
				"Src\\adxl362.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 2,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
